{
  "version": 3,
  "sources": ["../../../../../node_modules/ng-search-filter/fesm2015/ng-search-filter.js"],
  "sourcesContent": ["import { ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, ɵɵdirectiveInject, ɵɵdefinePipe, Pipe, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\n\nclass NgSearchFilterService {\n    constructor() { }\n    get defaultLang() {\n        return this._defaultLang || 'tr';\n    }\n    set defaultLang(defaultLang) {\n        this._defaultLang = defaultLang;\n    }\n    getDefaultLang() {\n        return this.defaultLang;\n    }\n    setDefaultLang(defaultLang) {\n        this.defaultLang = defaultLang;\n    }\n}\nNgSearchFilterService.ɵfac = function NgSearchFilterService_Factory(t) { return new (t || NgSearchFilterService)(); };\nNgSearchFilterService.ɵprov = ɵɵdefineInjectable({ token: NgSearchFilterService, factory: NgSearchFilterService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NgSearchFilterService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root',\n            }]\n    }], function () { return []; }, null); })();\n\nclass NgSearchFilterPipe {\n    constructor(_ngSearchFilterService) {\n        this._ngSearchFilterService = _ngSearchFilterService;\n        this._lang = this._ngSearchFilterService.getDefaultLang();\n    }\n    /**\n     * @param items object from array\n     * @param term term's search\n     * @param excludes array of strings which will ignored during search\n     */\n    transform(items, term, excludes = []) {\n        if (!term || !items)\n            return items;\n        return NgSearchFilterPipe.filter(items, term, excludes, this._lang);\n    }\n    /**\n     *\n     * @param items List of items to filter\n     * @param term  a string term to compare with every property of the list\n     * @param excludes List of keys which will be ignored during search\n     *\n     */\n    static filter(items, term, excludes, lang) {\n        const toCompare = term.toLocaleLowerCase(lang);\n        function checkInside(item, term) {\n            if (typeof item === 'string' &&\n                item.toString().toLocaleLowerCase(lang).includes(toCompare)) {\n                return true;\n            }\n            for (let property in item) {\n                if (item[property] === null ||\n                    item[property] == undefined ||\n                    excludes.includes(property)) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                else if (item[property].toString().toLocaleLowerCase(lang).includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNgSearchFilterPipe.ɵfac = function NgSearchFilterPipe_Factory(t) { return new (t || NgSearchFilterPipe)(ɵɵdirectiveInject(NgSearchFilterService)); };\nNgSearchFilterPipe.ɵpipe = ɵɵdefinePipe({ name: \"filter\", type: NgSearchFilterPipe, pure: false });\nNgSearchFilterPipe.ɵprov = ɵɵdefineInjectable({ token: NgSearchFilterPipe, factory: NgSearchFilterPipe.ɵfac });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NgSearchFilterPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false,\n            }]\n    }, {\n        type: Injectable\n    }], function () { return [{ type: NgSearchFilterService }]; }, null); })();\n\nclass NgSearchFilterModule {\n}\nNgSearchFilterModule.ɵmod = ɵɵdefineNgModule({ type: NgSearchFilterModule });\nNgSearchFilterModule.ɵinj = ɵɵdefineInjector({ factory: function NgSearchFilterModule_Factory(t) { return new (t || NgSearchFilterModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(NgSearchFilterModule, { declarations: [NgSearchFilterPipe], exports: [NgSearchFilterPipe] }); })();\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NgSearchFilterModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgSearchFilterPipe],\n                exports: [NgSearchFilterPipe],\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ng-search-filter\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgSearchFilterModule, NgSearchFilterPipe, NgSearchFilterService };\n\n"],
  "mappings": "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",
  "names": ["term"]
}
